version: 2.1
orbs:
  # Your orb will be automatically injected here during the pipeline.
  # Reference your orb's jobs and commands below as they will exist when built.
  orb-tools: circleci/orb-tools@12.0
  # The orb definition is intentionally not included here. It will be injected into the pipeline.
  tests: {}

# Use this tag to ensure test jobs always run,
# even though the downstream publish job will only run on release tags.
filters: &filters
  tags:
    only: /.*/

# Filter for release tags.
release-filters: &release-filters
  branches:
    ignore: /.*/
  tags:
    only: /^v[0-9]+\.[0-9]+\.[0-9]+$/

jobs:
  # Create jobs to test the commands of your orbs.
  # You may want to add additional validation steps to ensure the commands are working as expected.
  command-test:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Fetch Openfire
          command: curl -L "https://github.com/igniterealtime/Openfire/releases/download/v4.8.1/openfire_4_8_1.tar.gz" -o openfire.tar.gz
      - run:
          name: Fetch Openfire utility scripts
          command: |
            mkdir -p scripts
            cd scripts
            git init
            git remote add -f origin git@github.com:XMPP-Interop-Testing/Openfire-CircleCI.git
            git config core.sparseCheckout true
            echo ".github" >> .git/info/sparse-checkout
            git pull origin main
            cd ..
      - run:
          name: 'Extract Openfire'
          command: tar -xzf openfire.tar.gz
      - run:
          name: 'Run Openfire'
          command: |
            scripts/.github/actions/startserver-action/startCIServer.sh -i "127.0.0.1" -h "example.org" -b "openfire"
            sleep 6000
          background: true
      - run:
          name: 'Wait for Openfire to start'
          command: sleep 10
          
      # Run your orb's commands to validate them.
      - tests/test
workflows:
  test-deploy:
    jobs:
      # Make sure to include "filters: *filters" in every test job you want to run as part of your deployment.
      # Test your orb's commands in a custom job and test your orb's jobs directly as a part of this workflow.
      - command-test:
          filters: *filters
      # The orb must be re-packed for publishing, and saved to the workspace.
      - orb-tools/pack:
          filters: *release-filters
      - orb-tools/publish:
          orb_name: interop-test/tests
          vcs_type: << pipeline.project.type >>
          pub_type: production
          # Ensure this job requires all test jobs and the pack job.
          requires:
            - orb-tools/pack
            - command-test
          context: orb-publishing
          filters: *release-filters
